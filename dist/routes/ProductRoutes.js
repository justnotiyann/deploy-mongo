const router=require("express").Router(),Product=require("../models/Products");router.get("/",async(a,t)=>{var d=await Product.find();d||t.json({msg:"terjadi kesalahan"}),d<=0&&t.json({msg:"Data tidak ada"}),t.json({msg:"berikut data product",getProduct:d})}),router.post("/add",async(a,t)=>{var{product_name:a,country:d,price:e}=a.body,a=new Product({product_name:a,country:d,price:e});try{var r=await a.save();r||t.json({msg:"Terjadi kesalahan saat input data"}),t.json({msg:"Data berhasil ditambahkan",result:r})}catch(a){t.json({msg:"Terjadi kesalahan",e:a})}}),router.get("/get/:id",async(a,t)=>{a=a.params.id,a=await Product.find({_id:a});a||t.json({msg:"Terjadi kesalahan"}),a<=0&&t.json({msg:"data tidak ditemukan"}),t.json({msg:"Berikut data product terkait",getDataProduct:a}),t.json({msg:"gagal mencari data"})}),router.get("/delete/:id",async(a,t)=>{var a=a.params.id,d=await Product.find({id:a});d||t.json({msg:"data tidak ditemukan"});try{await Product.deleteOne({_id:a})||t.json({msg:"data gagal dihapus"}),t.json({msg:`data ${d[0].product_name} berhasil dihapus`})}catch(a){t.json({msg:"terjadi kesalahan",e:a})}}),router.get("/update/:id",async(a,t)=>{try{var d=a.params.id,e=(await Product.find({_id:d})||t.json({msg:"data tidak ditemukan"}),a.body),r={new:!0},s=await Product.findByIdAndUpdate(d,e,r);s||t.json({msg:"data gagal diedit"}),t.json({msg:"data berhasil diedit",result:s})}catch(a){t.json({msg:"Data tidak ditemukan, Harap input data dengan benar"})}}),module.exports=router;